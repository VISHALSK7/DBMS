#1Company
EMPLOYEE(SSN, NAME, ADDRESS, SEX, SALARY, SUPERSSN, DNO) 
DEPARTMENT(DNO, DNAME, MGRSSN, MGRSTARTDATE) 
DLOCATION(DNO,DLOC) 
PROJECT(PNO, PNAME, PLOCATION, DNO) 
WORKS_ON(SSN, PNO, HOURS)
  
Q1.a) Make a list of all project numbers for projects that involve an employee whose last name is ‘Scott’, either as a worker or as a manager of the department that Controls the project.
  SELECT DISTINCT P.PNO 
FROM PROJECT P, DEPARTMENTS D, EMPLOYEE E 
WHERE E.DNO = D.DNO 
  AND D.DNO = P.DNO 
  AND (E.LNAME = 'SCOTT' 
       OR D.MGRSSN IN (SELECT SSN FROM EMPLOYEE WHERE LNAME = 'SCOTT'));

Q2.b) Show the resulting salaries if every employee working on the ‘IoT’ project is Given a 10 percent raise.
  SELECT E.SSN, E.FNAME, E.LNAME, 1.1 * E.SALARY AS RAISEDSAL 
FROM EMPLOYEE E, PROJECT P, WORKS_ON W 
WHERE P.PNAME = 'IOT' 
  AND P.PNO = W.PNO 
  AND E.SSN = W.SSN;

Q3.c) Find the sum of the salaries of all employees of the ‘Accounts’ department, as well as the maximum salary, the minimum salary, and the average salary in this department
  SELECT SUM(SALARY) AS SUMSAL, 
       AVG(SALARY) AS AVGSAL, 
       MIN(SALARY) AS MINSAL, 
       MAX(SALARY) AS MAXSAL 
FROM EMPLOYEE E, DEPARTMENTS D 
WHERE E.DNO = D.DNO 
  AND D.DNAME = 'ACCOUNTS';


Q4.d) Retrieve the name of each employee who works on the entire projects controlled by department number 5.
  SELECT E.FNAME, E.LNAME 
FROM EMPLOYEE E 
WHERE NOT EXISTS (
  (SELECT PNO FROM PROJECT WHERE DNO = '5') 
  MINUS 
  (SELECT PNO FROM WORKS_ON WHERE E.SSN = SSN)
);

Q5.e) For each department that has more than five employees, retrieve the department number and the number of its employees who are making more than Rs. 6,00,000.
SELECT D.DNO, COUNT(*) AS NOOFEMP 
FROM EMPLOYEE E
JOIN DEPARTMENTS D ON E.DNO = D.DNO
WHERE E.SALARY > 600000 
  AND E.DNO IN (
    SELECT DNO 
    FROM EMPLOYEE 
    GROUP BY DNO 
    HAVING COUNT(*) > 5
  )
GROUP BY D.DNO;

#2Airline
FLIGHTS (FLNO: INTEGER, SOURCE: STRING, DESTINATION: STRING, DISTANCE: INTEGER, DEPARTS:TIME, ARRIVES: TIME, PRICE: INTEGER) 
AIRCRAFT (AID: INTEGER, ANAME: STRING, CRUISINGRANGE: INTEGER) 
CERTIFIED (EID: INTEGER, AID: INTEGER) 
EMPLOYEES (EID: INTEGER, ENAME: STRING, SALARY: INTEGER)

Q1.Find the names of aircraft such that all pilots certified to operate them earn more than $80,000.
SELECT ANAME 
FROM AIRCRAFT A, EMPLOYEES E, CERTIFIED C 
WHERE A.AID = C.AID 
  AND E.EID = C.EID 
  AND E.SALARY > 80000;

Q2.b) For each pilot who is certified for more than three aircraft, find the eid and the maximum cruisingrange of the aircraft for which she or he is certified.
  SELECT E.EID, MAX(CRUISINGRANGE) 
FROM EMPLOYEES E, CERTIFIED C, AIRCRAFT A 
WHERE E.EID = C.EID 
  AND A.AID = C.AID 
GROUP BY E.EID 
HAVING COUNT(*) > 2;

Q3.c) For all aircraft with cruisingrange over 1000 miles, find the name of the aircraft and the average salary of all pilots certified for this aircraft.
  SELECT A.ANAME, AVG(SALARY) 
FROM EMPLOYEES E, CERTIFIED C, AIRCRAFT A 
WHERE C.EID = E.EID 
  AND A.AID = C.AID 
  AND A.CRUISINGRANGE > 1000 
GROUP BY A.ANAME;

Q4.d) Print the enames of pilots who can operate planes with cruising range greater than 3000 miles but are not certified on any Boeing aircraft.
SELECT DISTINCT E.ENAME
FROM EMPLOYEES E
JOIN CERTIFIED C ON E.EID = C.EID
JOIN AIRCRAFT A ON C.AID = A.AID
WHERE A.CRUISINGRANGE > 3000
  AND E.EID NOT IN (
    SELECT C2.EID
    FROM CERTIFIED C2
    JOIN AIRCRAFT A2 ON C2.AID = A2.AID
    WHERE A2.ANAME = 'BOEING'
  );

5Q.e) Print the name and salary of every nonpilot whose salary is more than the average salary for pilots.
SELECT EID, ENAME, SALARY 
FROM EMPLOYEES 
WHERE SALARY > (
  SELECT AVG(SALARY)
  FROM EMPLOYEES
  WHERE EID IN (
    SELECT EID
    FROM CERTIFIED
  )
)
AND EID NOT IN (
  SELECT EID 
  FROM CERTIFIED
);

#3student
STUDENT(SNUM: INTEGER, SNAME: STRING, MAJOR: STRING, LEVEL: STRING, AGE: INTEGER) 
CLASS(CNAME: STRING, MEETS AT: STRING, ROOM: STRING, FID: INTEGER) 
ENROLLED(SNUM: INTEGER, CNAME: STRING) 
FACULTY(FID: INTEGER, FNAME: STRING, DEPTID: INTEGER)

1Q.a) Find the names of all Juniors (level = JR) who are enrolled in a class taught by Rakesh.
  SELECT DISTINCT S.SNUM, S.SNAME 
FROM STUDENT1 S, CLASS C, ENROLLED E, FACULTY F 
WHERE S.SNUM = E.SNUM 
  AND E.CNAME = C.CNAME 
  AND C.FID = F.FID 
  AND F.FNAME = 'RAKESH' 
  AND S.LEV = 'JR' 
ORDER BY S.SNUM;

2Q.b) Find the age of the oldest student who is either a history major or enrolled in a course taught by Ravi.
  SELECT MAX(S.AGE) AS AGE 
FROM STUDENT1 S 
WHERE (S.MAJOR = 'HISTORY') 
   OR S.SNUM IN (
     SELECT E.SNUM 
     FROM CLASS C, ENROLLED E, FACULTY F 
     WHERE E.CNAME = C.CNAME 
       AND C.FID = F.FID 
       AND F.FNAME = 'RAVI'
   );

3Q.c) Find the names of all students who are enrolled in two classes that meet at the same time.
  SELECT DISTINCT S.SNAME 
FROM STUDENT1 S 
WHERE S.SNUM IN (
  SELECT E1.SNUM 
  FROM ENROLLED E1, ENROLLED E2, CLASS C1, CLASS C2 
  WHERE E1.SNUM = E2.SNUM 
    AND E1.CNAME <> E2.CNAME 
    AND E1.CNAME = C1.CNAME 
    AND E2.CNAME = C2.CNAME 
    AND C1.MEETSAT = C2.MEETSAT
);

4Q.d) For each faculty member that has taught classes only in room R128, print the faculty member’s name and the total number of classes she or he has taught.
  SELECT DISTINCT F.FNAME, COUNT(*) AS COURSECOUNT 
FROM CLASS C, FACULTY F 
WHERE C.FID NOT IN (
  SELECT FID 
  FROM CLASS 
  WHERE ROOM IN (
    SELECT ROOM 
    FROM CLASS 
    WHERE ROOM != 'R128'
  )
) 
AND C.FID = F.FID 
GROUP BY F.FNAME;

5Q.
  CREATE VIEW StudentCourseDetails AS 
SELECT S.SNAME, S.SNUM, C.CNAME 
FROM STUDENT1 S 
JOIN ENROLLED E ON S.SNUM = E.SNUM 
JOIN CLASS C ON E.CNAME = C.CNAME;
