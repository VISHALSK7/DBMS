STUDENT(SNUM: INTEGER, SNAME: STRING, MAJOR: STRING, LEVEL: STRING, AGE: INTEGER) 
CLASS(CNAME: STRING, MEETS AT: STRING, ROOM: STRING, FID: INTEGER) 
ENROLLED(SNUM: INTEGER, CNAME: STRING) 
FACULTY(FID: INTEGER, FNAME: STRING, DEPTID: INTEGER)

1Q.a) Find the names of all Juniors (level = JR) who are enrolled in a class taught by Rakesh.
  SELECT DISTINCT S.SNUM, S.SNAME 
FROM STUDENT1 S, CLASS C, ENROLLED E, FACULTY F 
WHERE S.SNUM = E.SNUM 
  AND E.CNAME = C.CNAME 
  AND C.FID = F.FID 
  AND F.FNAME = 'RAKESH' 
  AND S.LEV = 'JR' 
ORDER BY S.SNUM;

2Q.b) Find the age of the oldest student who is either a history major or enrolled in a course taught by Ravi.
  SELECT MAX(S.AGE) AS AGE 
FROM STUDENT1 S 
WHERE (S.MAJOR = 'HISTORY') 
   OR S.SNUM IN (
     SELECT E.SNUM 
     FROM CLASS C, ENROLLED E, FACULTY F 
     WHERE E.CNAME = C.CNAME 
       AND C.FID = F.FID 
       AND F.FNAME = 'RAVI'
   );

3Q.c) Find the names of all students who are enrolled in two classes that meet at the same time.
  SELECT DISTINCT S.SNAME 
FROM STUDENT1 S 
WHERE S.SNUM IN (
  SELECT E1.SNUM 
  FROM ENROLLED E1, ENROLLED E2, CLASS C1, CLASS C2 
  WHERE E1.SNUM = E2.SNUM 
    AND E1.CNAME <> E2.CNAME 
    AND E1.CNAME = C1.CNAME 
    AND E2.CNAME = C2.CNAME 
    AND C1.MEETSAT = C2.MEETSAT
);

4Q.d) For each faculty member that has taught classes only in room R128, print the faculty memberâ€™s name and the total number of classes she or he has taught.
  SELECT DISTINCT F.FNAME, COUNT(*) AS COURSECOUNT 
FROM CLASS C, FACULTY F 
WHERE C.FID NOT IN (
  SELECT FID 
  FROM CLASS 
  WHERE ROOM IN (
    SELECT ROOM 
    FROM CLASS 
    WHERE ROOM != 'R128'
  )
) 
AND C.FID = F.FID 
GROUP BY F.FNAME;

5Q.
  CREATE VIEW StudentCourseDetails AS 
SELECT S.SNAME, S.SNUM, C.CNAME 
FROM STUDENT1 S 
JOIN ENROLLED E ON S.SNUM = E.SNUM 
JOIN CLASS C ON E.CNAME = C.CNAME;
